type User @entity {
  # user address
  id: ID!
  # total NFTs owned by this user (in wallet, not staked)
  totalOwned: BigInt!
  # all NFTs owned by this user
  nfts: [NFT!]! @derivedFrom(field: "owner")
}

type NFT @entity {
  # NFT contract address + token ID
  id: ID!
  # NFT contract address
  contract: Bytes!
  # token ID
  tokenId: BigInt!
  # current owner (User entity)
  owner: User!
  # current owner address (for convenience)
  ownerAddress: Bytes!
  # all transfer events for this NFT
  transfers: [NFTTransfer!]! @derivedFrom(field: "nft")
}

type NFTTransfer @entity {
  # transaction hash + log index
  id: ID!
  # NFT
  nft: NFT!
  # NFT contract address
  contract: Bytes!
  # token ID
  tokenId: BigInt!
  # from address
  from: Bytes!
  # to address
  to: Bytes!
  # transaction hash
  transactionHash: Bytes!
  # timestamp
  timestamp: BigInt!
  # block number
  blockNumber: BigInt!
  # log index
  logIndex: BigInt!
}

type NFTCollection @entity {
  # NFT contract address
  id: ID!
  # NFT contract address
  address: Bytes!
  # Total NFTs minted
  totalMinted: BigInt!
  # Total NFTs burned
  totalBurned: BigInt!
  # Total unique holders
  totalHolders: BigInt!
}

type GlobalStats @entity {
  # Singleton entity with ID "global"
  id: ID!
  # Total NFTs minted across all collections
  totalMinted: BigInt!
  # Total NFTs burned across all collections
  totalBurned: BigInt!
  # Total unique holders across all collections
  totalHolders: BigInt!
}
